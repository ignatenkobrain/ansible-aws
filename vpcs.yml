---
- hosts: vpcs
  gather_facts: no
  tasks:
    - name: Create VPC
      ec2_vpc_net:
        region: "{{ aws_region }}"
        name: "{{ name }}-vpc"
        cidr_block: "{{ cidr }}"
        tags:
          Managed-By: Ansible
      register: vpc_info
    - name: Cache VPC ID
      set_fact: vpc_id={{ vpc_info['vpc']['id'] }} cacheable=yes

    - name: Spawn creation of an internet gateway
      ec2_vpc_igw:
        region: "{{ aws_region }}"
        vpc_id: "{{ vpc_id }}"
        tags:
          Name: "{{ name }}-igw"
          Managed-By: Ansible
      async: 60
      poll: 0
      register: igw_task

    - name: Spawn creation of subnets
      ec2_vpc_subnet:
        region: "{{ aws_region }}"
        az: "{{ item.value['az'] }}"
        cidr: "{{ item.value['cidr'] }}"
        vpc_id: "{{ vpc_id }}"
        wait: no
        tags:
          Name: "{{ name }}-{{ item.key }}-subnet"
          Managed-By: Ansible
      loop: "{{ subnets | dict2items }}"
      async: 90
      poll: 0
      register: subnets_task

    - name: Spawn creation of security groups
      ec2_group:
        region: "{{ aws_region }}"
        name: "{{ item.key }}"
        description: "{{ item.value['description'] | default('default VPC security group') }}"
        rules: "{{ item.value['rules'] | default(omit) }}"
        vpc_id: "{{ vpc_id }}"
        tags:
          Name: "{{ name }}-{{ item.key }}-group"
          Managed-By: Ansible
      loop: "{{ security_groups | dict2items }}"
      async: 60
      poll: 0
      register: security_groups_task

    - name: Lookup the main VPC route table (created automatically)
      ec2_vpc_route_table_info:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ vpc_id }}"
          association.main: "true"
      register: vpc_route_tables
    - name: Cache Route Table ID
      set_fact: route_table_id={{ vpc_route_tables['route_tables'][0]['id'] }} cacheable=yes

    - name: Wait until internet gateway is created
      async_status:
        jid: "{{ igw_task.ansible_job_id }}"
      register: igw_info
      until: igw_info.finished
    - name: Cache Internet Gateway ID
      set_fact: igw_id={{ igw_info['gateway_id'] }} cacheable=yes

    - name: Wait until subnets are created
      async_status:
        jid: "{{ item.ansible_job_id }}"
      loop: "{{ subnets_task.results }}"
      retries: 10
      register: subnets_info
      until: subnets_info.finished
    - name: Cache Subnet IDâ€™s
      set_fact:
        subnet_ids: "{{ subnet_ids | default({}) | combine({ item['subnet']['tags']['Name']: item['subnet']['id'] }) }}"
        cacheable: true
      loop: "{{ subnets_info.results }}"

    - name: Add subnets to the routing table
      ec2_vpc_route_table:
        region: "{{ aws_region }}"
        lookup: id
        route_table_id: "{{ route_table_id }}"
        routes:
          - dest: "{{ cidr }}"
            gateway_id: local
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_id }}"
        subnets: "{{ subnet_ids.keys() | list }}"
        vpc_id: "{{ vpc_id }}"
        tags:
          Name: "{{ name }}-rt"
          Managed-By: Ansible

    - name: Wait until security groups are created
      async_status:
        jid: "{{ item.ansible_job_id }}"
      loop: "{{ security_groups_task.results }}"
